#!/bin/bash
#SBATCH --job-name=Fastp-PE
#SBATCH --qos=medium
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=2gb
#SBATCH --time=7-00:00:00
#SBATCH --output=Fastp_qc_PROYECT_PAIRED.log

#Set paths (uncomment when finished)
INPUT_DIR=/storage/tbc/gut_core/CoreV2/Muestras_Enrique/Datasets_Generales/PRJNA604850_Roth-Schulze2021/Downloaded_FASTQs
OUTPUT_DIR=/storage/tbc/gut_core/CoreV2/Pruebas_QC/Programs_Comparative/fastp_low_comp/Roth-Schulze2021
ADAPTERS=none

#Echo paths
echo "Fastp QC PE:"
echo "INPUT_DIR:" $INPUT_DIR
echo "OUTPUT_DIR:" $OUTPUT_DIR
echo "ADAPTERS:" $ADAPTERS

#Load anaconda module
module load anaconda/anaconda3_2022.10

#Load conda env
source activate qc_programs_Mar2023
conda info
conda list

##Loop for processing samples
echo "Running Fastp PAIRED:"
for f1 in $(ls $INPUT_DIR/*_1.fastq.gz)
do
	###Set name and path to pair FASTQ REVERSE
	base=$(basename $f1 _1.fastq.gz)
	f2=${INPUT_DIR}/${base}_2.fastq.gz

	###Output names
	f1_qc=${OUTPUT_DIR}/${base}"_qc_1.fastq.gz"
	f2_qc=${OUTPUT_DIR}/${base}"_qc_2.fastq.gz"

	###Show message
	echo "Processing Sample..."
	echo $base

	###QC with FASTP
	#Input and Output files(R1)
	#Input and Output files(R2)
	#Adapters(AUTODETECT PE)
	#Trimming parameters(LEADING:20)
	#Trimming parameters(TRAILING:20)
	#Trimming parameters(SLIDINGWINDOW:4:15)
	#PolyG tail trimming (NextSeq/NovaSeq)
	#Default filters
	#Extra Filters (N=0 and lenght=60bp)
	#We do this to not save reports generated by fastp(JSON and HTML)
	#Disable Duplication Evaluation
	#Low complexity filter
	#Number of threads
	#Adapters(ADAPTERS FASTA)
	fastp \
	--in1 $f1 --out1 $f1_qc \
	--in2 $f2 --out2 $f2_qc \
	--detect_adapter_for_pe \
	-5 --cut_front_mean_quality 20 --cut_front_window_size 1 \
	-3 --cut_tail_mean_quality 20 --cut_tail_window_size 1 \
	--cut_right --cut_right_mean_quality 15 --cut_right_window_size 4 \
	--trim_poly_g \
	--qualified_quality_phred 15 --unqualified_percent_limit 40 \
	--n_base_limit 0 --length_required 60 \
	--json /dev/null --html /dev/null \
	--dont_eval_duplication \
	--low_complexity_filter \
	--thread 8
	# adapter_fasta $ADAPTERS
done

#End script
echo "End Script! Bye!"
